"use strict";

// nav
var navBtn = document.querySelector('.nav-btn');
var navContent = document.querySelector('.nav-content');
navBtn.addEventListener('click', function () {
  navContent.classList.toggle('active');
  this.classList.toggle('active');
}); // slider

var sliderItems = document.querySelectorAll('.slider__item');
var sliderBtns = document.querySelectorAll('[data-target]');
var activeSlide = 0;

for (var i = 0; i < sliderItems.length; i++) {
  if (sliderItems[i].classList.contains('active')) {
    activeSlide = i;
  }
}

for (var _i = 0; _i < sliderBtns.length; _i++) {
  sliderBtns[_i].addEventListener('click', function (e) {
    move(e.target.getAttribute('data-target'));
  });
}

function move(btn) {
  if (btn === 'next') {
    if (activeSlide < sliderItems.length - 1) {
      activeSlide++;
    } else {
      activeSlide = 0;
    }
  } else {
    if (activeSlide > 0) {
      activeSlide--;
    } else {
      activeSlide = sliderItems.length - 1;
    }
  }

  sliderItems.forEach(function (item) {
    item.classList.remove('active');
  });
  sliderItems[activeSlide].classList.add('active');
} // apply


var applyStep = document.querySelectorAll('.apply-step');
var applyForm = document.querySelectorAll('.apply-form');
var applyBtn = document.querySelectorAll('.apply-btn, .apply-back, .apply-next');

var _loop = function _loop(_i2) {
  applyBtn[_i2].addEventListener('click', function (e) {
    e.preventDefault();

    if (_i2 === 0) {
      applyStep[1].classList.add('active');
      applyForm[0].classList.remove('active');
      applyForm[1].classList.add('active');
    } else if (_i2 === 1) {
      applyStep[1].classList.remove('active');
      applyForm[0].classList.add('active');
      applyForm[1].classList.remove('active');
    } else if (_i2 === 2) {
      for (var _i5 = 0; _i5 < applyStep.length; _i5++) {
        applyStep[_i5].style.display = 'none';
      }

      applyForm[2].classList.add('active');
      applyForm[1].classList.remove('active');
    }
  });
};

for (var _i2 = 0; _i2 < applyBtn.length; _i2++) {
  _loop(_i2);
} // video


var video = document.querySelector('.video-mp4');
var speedWatch = document.querySelector('.video__speed-watch');
var speedPrev = document.querySelector('.video__prev-speed');
var prev = document.querySelector('.video__prev');
var play = document.querySelector('.video__play');
var next = document.querySelector('.video__next');
var speedNext = document.querySelector('.video__next-speed');
var videoStart = document.querySelector('#start');
var videoEnd = document.querySelector('#end');
var duration = document.querySelector('.video-duration');
var line = document.querySelector('.video-line');
var volumeIcon = document.querySelector('.video__volume-icon');
var volumeRange = document.querySelector('.video__volume-range');

function playPause() {
  play.classList.toggle('active');

  if (video.paused) {
    video.play();
    setInterval(function () {
      videoStart.innerHTML = formatTime(video.currentTime);
    }, 1000);
    videoEnd.innerHTML = formatTime(video.duration);
  } else {
    video.pause();
  }
}

function videoSpeed(symbol) {
  if (symbol === '-' && video.playbackRate > 0) {
    video.playbackRate -= 0.25;
  } else if (symbol === '+' && video.playbackRate < 2) {
    video.playbackRate += 0.25;
  }

  speedWatch.style.display = 'flex';
  speedWatch.innerHTML = video.playbackRate + 'x';
  setTimeout(function () {
    speedWatch.style.display = 'none';
  }, 1500);
}

function formatTime(time) {
  var noll = function noll(num) {
    return num < 10 ? '0' + num : num;
  };

  var hour = Math.trunc(time / 3600);
  time = time - hour * 3600;
  var min = Math.trunc(time / 60);
  time = time - min * 60;
  time = Math.trunc(time);
  return "".concat(noll(min), ":").concat(noll(time));
}

play.addEventListener('click', function () {
  playPause();
});
video.addEventListener('click', function () {
  playPause();
});
prev.addEventListener('click', function () {
  alert('no video!!!');
});
next.addEventListener('click', function () {
  alert('no video!!!');
});
speedPrev.addEventListener('click', function () {
  videoSpeed('-');
});
speedNext.addEventListener('click', function () {
  videoSpeed('+');
});
duration.addEventListener('click', function (e) {
  var videoTime = e.offsetX / duration.clientWidth * video.duration;
  video.currentTime = videoTime;
});
video.addEventListener('timeupdate', function () {
  var lineWidth = video.currentTime / video.duration;
  line.style.width = lineWidth * 100 + '%';
});
var volumeClass = ['mute', 'down', 'normal', 'up'];

video.onvolumechange = function () {
  for (var _i3 = 0; _i3 < volumeClass.length; _i3++) {
    volumeIcon.classList.remove(volumeClass[_i3]);
  }

  var volume = video.volume * 100;

  if (volume.muted) {
    volumeIcon.classList.add('mute');
  } else if (volume > 65) {
    volumeIcon.classList.add('up');
  } else if (volume > 30) {
    volumeIcon.classList.add('normal');
  } else if (volume > 0) {
    volumeIcon.classList.add('down');
  } else if (volume == 0) {
    volumeIcon.classList.add('mute');
  }
};

volumeRange.addEventListener('click', function (e) {
  video.volume = e.target.value / 100;
});
video.addEventListener('dblclick', function () {
  video.requestFullscreen();
}); // service

var serviceBlock = document.querySelector('.service__block');
var serviceLeft = document.querySelector('.service__left');
var serviceRight = document.querySelector('.service__right');
serviceLeft.addEventListener('click', function () {
  serviceBlock.scrollLeft = serviceBlock.scrollLeft - 180;
});
serviceRight.addEventListener('click', function () {
  serviceBlock.scrollLeft = serviceBlock.scrollLeft + 180;
});
var serviceWidth = serviceBlock.scrollWidth - serviceBlock.clientWidth;

function serviceSlider() {
  if (serviceBlock.scrollLeft > serviceWidth - 1) {
    serviceBlock.scrollLeft -= serviceWidth;
  } else {
    serviceBlock.scrollLeft += 1;
  }
}

setInterval(function () {
  serviceSlider();
}, 15);
var accardion = document.querySelectorAll('.accardion__box');

var _loop2 = function _loop2(_i4) {
  accardion[_i4].addEventListener('click', function () {
    for (var j = 0; j < accardion.length; j++) {
      accardion[j].classList.remove('active');
    }

    accardion[_i4].classList.add('active');
  });
};

for (var _i4 = 0; _i4 < accardion.length; _i4++) {
  _loop2(_i4);
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
